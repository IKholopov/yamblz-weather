apply plugin: 'jacoco'


jacoco {
    toolVersion="0.7.9+"
}

project.afterEvaluate {
    def buildTypes = android.buildTypes.collect { type -> type.name }
    def productFlavors = android.productFlavors.collect {flavor -> flavor.name }

    if(!productFlavors) productFlavors.add('')

    productFlavors.each { productFlavorName ->
        buildTypes.each { buildTypeName ->
            def sourceName, sourcePath
            if(!productFlavorName) {
                sourceName = sourcePath = "${buildTypeName}"
            } else {
                sourceName = "${productFlavorName}${buildTypeName.capitalize()}"
                sourcePath = "${productFlavorName}/${buildTypeName}"
            }
            def testTaskName = "test${sourceName.capitalize()}UnitTest"
            task "${testTaskName}Coverage" (type:JacocoReport, dependsOn: "$testTaskName") {
                group = "Reporting"
                description = "Generate Jacoco coverage reports on the ${sourceName.capitalize()} build."
                logger.warn("${project.projectDir}/src/main")
                classDirectories = fileTree(
                        dir:"${project.buildDir}/intermediates/classes/debug/com/example/toor/yamblzweather/data/database",
                        excludes: ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                                   '**/*_*Factory*.*',
                                   '**/*_Module*.*',
                                   '**/*_ViewBinding*.*',
                                   '**/*_MembersInjector*.*',
                                   '**/*_Provide*.*',
                                   '**/Dagger*.*',
                                   '**/di/*',
                                   '**/di/modules/*']
                )
                def coverageSourceDirs = [
                        "${project.projectDir}/src/main/java/",
                ]
                additionalSourceDirs = files(coverageSourceDirs)
                sourceDirectories = files(coverageSourceDirs)
                executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")

                reports {
                    xml.enabled = true
                    html.enabled = true
                }
            }
        }
    }
}